[{"id":"7a21ba35b8eaf964","type":"ncd-gateway-node","z":"8c51d1a367a55d26","name":"","connection":"","unknown_devices":false,"outputs":1,"x":810,"y":920,"wires":[["fc636a7bda3a9f9b","5ce4d607655f8d89"]]},{"id":"2d3898993f217a4e","type":"inject","z":"8c51d1a367a55d26","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"devices\":[\"00:13:a2:00:41:df:2a:76\"]}","payloadType":"json","x":410,"y":780,"wires":[["e79f9a565f911996"]]},{"id":"e79f9a565f911996","type":"function","z":"8c51d1a367a55d26","name":"Add incomming device to context","func":"var newDevices = msg.payload.devices;\nvar existingDevices = flow.get('devices');\n\nif(typeof existingDevices == 'undefined'){\n    flow.set('devices',newDevices);\n    msg.payload.devices = newDevices;\n    return msg;\n}else{\n    for(let newDevice of newDevices){\n        var exists = false;\n        for(let existingDevice of existingDevices){\n            if(newDevice == existingDevice){\n                exists = true;\n                break;\n            }\n        }\n        if(!exists){\n            existingDevices.push(newDevice);\n        } \n    }\n}\nflow.set('devices',existingDevices);\nmsg.payload.devices = existingDevices;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":780,"wires":[[]]},{"id":"162d7bf7604a5c20","type":"function","z":"8c51d1a367a55d26","name":"Check Devices","func":"var devices = flow.get('devices');\nvar ramdevices = flow.get('ramdevices');\nvar deviceID = msg.payload.addr;\nif(typeof devices == 'undefined')return;\nif(typeof ramdevices == 'undefined'){\n    ramdevices = [];\n    flow.set('ramdevices',ramdevices);\n}\nfor(var i = 0; i < devices.length; i++){\n    // console.log('device: '+devices[i]+' deviceID: '+deviceID);\n    if(deviceID == devices[i] && msg.payload.sensor_data.hasOwnProperty(\"x_rms_ACC_G\")){ //for type 80 or 84\n    //if (deviceID == devices[i] && msg.payload.sensor_data.hasOwnProperty(\"x1_rms_ACC_G\")) { //for type 81\n        if(ramdevices.includes(deviceID)){\n          msg.payload.address = deviceID;  \n        }\n        else{\n           msg.payload.address = \"00:00:00:00:00:00:ff:ff\" ;\n           ramdevices.push(deviceID);\n        }\n //       msg.payload.address = deviceID;\n        // msg.payload.address = \"00:00:00:00:00:00:ff:ff\"\n        msg.payload.data = [0xF4,0x4F,0x00,0x00,0x50,0x13]; // type 80 or 84\n        // msg.payload.data = [0xF4,0x4F,0x00,0x00,0x50,0x13,0x01]; // type 81 probe one\n        // msg.payload.data = [0xF4,0x4F,0x00,0x00,0x50,0x13,0x02]; // type 81 probe two\n        // msg.payload.data = [0xF4,0x4F,0x00,0x00,0x50,0x13,0x03]; // type 81 probe one and two\n        // msg.payload.data = [0xF7,0x40,0x00,0x00,0x00]; // reboot sensor\n        // devices.splice(i,1);\n        flow.set(\"ramdevices\",ramdevices);\n        return msg;\n        \n    }\n}","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":920,"wires":[["6b46842df41c3f3d","f8564028998378b8"]]},{"id":"fc636a7bda3a9f9b","type":"switch","z":"8c51d1a367a55d26","name":"Vibration Check Valve","property":"payload.sensor_type","propertyType":"msg","rules":[{"t":"eq","v":"80","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":1020,"y":920,"wires":[["90141c2a23d25330","162d7bf7604a5c20"]]},{"id":"6b46842df41c3f3d","type":"delay","z":"8c51d1a367a55d26","name":"","pauseType":"delay","timeout":"100","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":610,"y":920,"wires":[["7a21ba35b8eaf964"]]},{"id":"90141c2a23d25330","type":"debug","z":"8c51d1a367a55d26","name":"check vib","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1220,"y":900,"wires":[]},{"id":"f8564028998378b8","type":"debug","z":"8c51d1a367a55d26","name":"check device","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":610,"y":880,"wires":[]},{"id":"5ce4d607655f8d89","type":"debug","z":"8c51d1a367a55d26","name":"Wireless Gateway out","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1020,"y":880,"wires":[]}]
